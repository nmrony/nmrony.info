<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>Coding is Poetry</title><description>Thoughts, stories and ideas.</description><link>http://blog.nmrony.docker/</link><generator>Ghost 0.9</generator><lastBuildDate>Fri, 09 Sep 2016 15:23:03 GMT</lastBuildDate><atom:link href="http://blog.nmrony.docker/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Update VirtualBox Guest Additions in Vagrant Box</title><description>&lt;p&gt;Sometimes We need to upgrade the guest edition for our Vagrant box working properly with virtualbox provider. Without proper &lt;code&gt;Virtualbox Guest Addition&lt;/code&gt; Vagrant sometimes does not provide shared file functionality and does problem with group and/or user permissions.&lt;/p&gt;

&lt;h4 id="theproblem"&gt;The Problem&lt;/h4&gt;

&lt;p&gt;Today when i run &lt;code&gt;vagrant up --provision&lt;/code&gt; command on&lt;/p&gt;</description><link>http://blog.nmrony.docker/update-virtualbox-guest-additions-in-vagrant-box/</link><guid isPermaLink="false">18dfed77-656d-4a22-a88b-4b93df385235</guid><category>vagrant</category><category>virtualbox</category><category>tips</category><dc:creator>Nur Rony</dc:creator><pubDate>Mon, 01 Feb 2016 15:18:00 GMT</pubDate><content:encoded>&lt;p&gt;Sometimes We need to upgrade the guest edition for our Vagrant box working properly with virtualbox provider. Without proper &lt;code&gt;Virtualbox Guest Addition&lt;/code&gt; Vagrant sometimes does not provide shared file functionality and does problem with group and/or user permissions.&lt;/p&gt;

&lt;h4 id="theproblem"&gt;The Problem&lt;/h4&gt;

&lt;p&gt;Today when i run &lt;code&gt;vagrant up --provision&lt;/code&gt; command on my shell. Vagrant gives me following errors&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Failed to mount folders in Linux guest. This is usually because  
the "vboxsf" file system is not available. Please verify that  
the guest additions are properly installed in the guest and  
can work properly. The command attempted was:

mount -t vboxsf -o uid=`id -u vagrant`,gid=`getent group vagrant | cut -d: -f3` vagrant /vagrant  
mount -t vboxsf -o uid=`id -u vagrant`,gid=`id -g vagrant` vagrant /vagrant

The error output from the last command was:

/sbin/mount.vboxsf: mounting failed with the error: No such device
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There may be another warning message where you also need to update Virtualbox Guest Additions  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[default] The guest additions on this VM do not match the install version of
VirtualBox! This may cause things such as forwarded ports, shared  
folders, and more to not work properly. If any of those things fail on  
this machine, please update the guest additions and repackage the  
box.  
Guest Additions Version: 4.2.8  
VirtualBox Version: 5.0.12  
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="thesolution"&gt;The Solution&lt;/h4&gt;

&lt;p&gt;I run the following command to update my vagrant box guest Addition.  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nurrony@devmachine:vagrant-playbox$ vagrant up  
#Let it finish the initial tasks to boot up your vagrant box
nurrony@devmachine:vagrant-playbox$ vagrant ssh  
vagrant@vagrant-playbox:~$ sudo yum -y update  
vagrant@vagrant-playbox:~$ cd /opt  
vagrant@vagrant-playbox:~$ sudo wget -c http://download.virtualbox.org/virtualbox/5.0.12/VBoxGuestAdditions_5.0.12.iso -O VBoxGuestAdditions_5.0.12.iso  
vagrant@vagrant-playbox:~$ sudo mount VBoxGuestAdditions_5.0.12.iso -o loop /mnt  
vagrant@vagrant-playbox:~$ cd /mnt  
vagrant@vagrant-playbox:~$ sudo sh VBoxLinuxAdditions.run --nox11  
vagrant@vagrant-playbox:~$ cd /opt  
vagrant@vagrant-playbox:~$ sudo rm *.iso  
vagrant@vagrant-playbox:~$ sudo /etc/init.d/vboxadd setup  
vagrant@vagrant-playbox:~$ sudo chkconfig --add vboxadd  
vagrant@vagrant-playbox:~$ sudo chkconfig vboxadd on  
vagrant@vagrant-playbox:~$ exit

# Now check that the Guest Additions work
nurrony@devmachine:vagrant-playbox$ vagrant halt  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now run the &lt;strong&gt;&lt;code&gt;vagrant up&lt;/code&gt;&lt;/strong&gt; command. The error/warning message should be gone. That's all.. Enjoy!!&lt;/p&gt;</content:encoded></item><item><title>Install PHP 7.0 in Ubuntu</title><description>&lt;p&gt;It is easy to install latest PHP 7.0. Run the following commands in your terminal. I am using Ubuntu and using &lt;strong&gt;&lt;code&gt;ppa:ondrej/php&lt;/code&gt;&lt;/strong&gt; from &lt;strong&gt;Ondřej Surý&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id="prerequisites"&gt;Prerequisites&lt;/h3&gt;

&lt;p&gt;I am assuming that you are running &lt;code&gt;PHP 5.x&lt;/code&gt; on an Ubuntu 14.04 machine, using either &lt;code&gt;mod_php&lt;/code&gt; in&lt;/p&gt;</description><link>http://blog.nmrony.docker/install-php-7-0-in-ubuntu/</link><guid isPermaLink="false">28bcdfe7-e5e1-415c-adec-503bd59dd346</guid><category>php</category><category>ubuntu</category><category>latest</category><dc:creator>Nur Rony</dc:creator><pubDate>Sun, 31 Jan 2016 14:54:00 GMT</pubDate><content:encoded>&lt;p&gt;It is easy to install latest PHP 7.0. Run the following commands in your terminal. I am using Ubuntu and using &lt;strong&gt;&lt;code&gt;ppa:ondrej/php&lt;/code&gt;&lt;/strong&gt; from &lt;strong&gt;Ondřej Surý&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id="prerequisites"&gt;Prerequisites&lt;/h3&gt;

&lt;p&gt;I am assuming that you are running &lt;code&gt;PHP 5.x&lt;/code&gt; on an Ubuntu 14.04 machine, using either &lt;code&gt;mod_php&lt;/code&gt; in conjunction with &lt;code&gt;Apache&lt;/code&gt;, or &lt;code&gt;PHP-FPM&lt;/code&gt; in conjunction with &lt;code&gt;Nginx&lt;/code&gt;. I also assume that you have a non-root user configured with &lt;code&gt;sudo&lt;/code&gt; privileges for administrative tasks.&lt;/p&gt;

&lt;h3 id="setupscript"&gt;Setup Script&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# remove php5 modules
sudo apt-get autoremove --purge php5-* &amp;amp;&amp;amp; \  
sudo apt-get install -y language-pack-en-base &amp;amp;&amp;amp; \  
sudo LC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/php -y &amp;amp;&amp;amp; sudo apt-get update &amp;amp;&amp;amp; \  
sudo apt-get install -y php7.0 \  
php7.0-cgi \  
php7.0-cli \  
php7.0-curl \  
php7.0-imap \  
php7.0-ldap \  
php7.0-pgsql \  
php7.0-mcrypt \  
php7.0-sqlite3 \  
php7.0-mysql \  
php7.0-json \  
php7.0-fpm \  
php7.0-xmlrpc \  
php7.0-gd \  
php7.0-common \  
php7.0-odbc \  
php7.0-opcache \  
php7.0-readline \  
php7.0-intl \  
php7.0-phpdbg \  
php7.0-tidy \  
php7.0-mbstring \  
php7.0-xml \  
mcrypt \  
libmcrypt-dev  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install &lt;a href="https://gist.github.com/nmrony/3f4f29f2792704b4912f/"&gt;&lt;strong&gt;PHP 7 Gist&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I use &lt;code&gt;PHP-7&lt;/code&gt; with &lt;code&gt;Nginx&lt;/code&gt;. I will write a post on how to install and configure &lt;code&gt;php 7&lt;/code&gt; with &lt;code&gt;Ningx&lt;/code&gt; soon.&lt;/p&gt;</content:encoded></item><item><title>Publishing Ghost Blog to Github Pages</title><description>&lt;p&gt;I like simplicity. I also believe that simple things are really beautiful. I recently migrate my blog from Wordpress to Git pages. It gives me ultimate freedom to customize my blog. I am a &lt;a href="https://nodejs.org"&gt;&lt;strong&gt;NodeJS&lt;/strong&gt;&lt;/a&gt; guy and a great fan of Markdown. I choose Ghost for publishing my blog to&lt;/p&gt;</description><link>http://blog.nmrony.docker/publishing-ghost-blog-to-github-pages/</link><guid isPermaLink="false">3b26ad41-c887-4f90-a9da-46f26b12c086</guid><category>ghost</category><category>github-pages</category><category>linux</category><category>git</category><category>ubuntu</category><dc:creator>Nur Rony</dc:creator><pubDate>Sun, 31 Jan 2016 14:40:00 GMT</pubDate><content:encoded>&lt;p&gt;I like simplicity. I also believe that simple things are really beautiful. I recently migrate my blog from Wordpress to Git pages. It gives me ultimate freedom to customize my blog. I am a &lt;a href="https://nodejs.org"&gt;&lt;strong&gt;NodeJS&lt;/strong&gt;&lt;/a&gt; guy and a great fan of Markdown. I choose Ghost for publishing my blog to Git Page. But Git only host the static page. So I use Buster to generate static content from &lt;a href="https://ghost.org"&gt;&lt;strong&gt;Ghost&lt;/strong&gt;&lt;/a&gt; blog.&lt;/p&gt;

&lt;h3 id="prerequisites"&gt;Prerequisites&lt;/h3&gt;

&lt;p&gt;I am assuming that you have these following things installed in your machine:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You are on &lt;strong&gt;Ubuntu&lt;/strong&gt; or &lt;strong&gt;*nix&lt;/strong&gt; machine  &lt;/li&gt;
&lt;li&gt;You have git installed on your machine  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NodeJS &gt;4.2.4&lt;/strong&gt; and &lt;strong&gt;NPM&lt;/strong&gt; (comes with NodeJS).  &lt;/li&gt;
&lt;li&gt;You already familiar with Ghost and know how to setup, configure and run custom installation.  &lt;/li&gt;
&lt;li&gt;Have &lt;a href="https://github.com/axitkhurana/buster"&gt;&lt;strong&gt;Buster&lt;/strong&gt;&lt;/a&gt; installed on your machine.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id="setupgitpage"&gt;Setup Git page&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Create a repository &lt;your-username&gt;.github.io  &lt;/your-username&gt;&lt;/li&gt;
&lt;li&gt;Go to your Ghost root directory on your local machine.  &lt;/li&gt;
&lt;li&gt;Run the following command in your terminal to clone your &lt;your-github-username&gt;.github.io in static directory in your Ghost root directory on local machine.  &lt;/your-github-username&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:&amp;lt;your-github-github-username&amp;gt;/&amp;lt;your-github-username&amp;gt;.github.io static  
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="downloaddeployscript"&gt;Download Deploy script&lt;/h4&gt;

&lt;p&gt;To make the deployment process easily with Buster I have already created a deployment script for it. &lt;br&gt;
To download the script run the following command on terminal from your Ghost root directory.  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -fsOSL https://gist.githubusercontent.com/nmrony/77147308e38776031412/raw/ghost2git &amp;amp;&amp;amp; chmod +x ghost2git  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open the &lt;code&gt;git2ghost&lt;/code&gt; script in your favorite editor. Find and replace &lt;code&gt;&amp;lt;your-github-username&amp;gt;&lt;/code&gt; with yours.&lt;/p&gt;

&lt;p&gt;For more please see the README of the &lt;a href="https://gist.github.com/nmrony/77147308e38776031412#file-configuration-md"&gt;&lt;strong&gt;Gist&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now after publishing a post in your local Ghost blog you can deploy it just running &lt;code&gt;./ghost2git&lt;/code&gt; from your local ghost root directory.&lt;/p&gt;</content:encoded></item><item><title>Installing latest Docker on Ubuntu</title><description>&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt; is an awesome and powerful tool for developing and deploying your apps. According to Docker official website, Docker is&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Docker is an open platform for developers and sysadmins to build, ship, and run distributed applications&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you ask me to tell you what docker is I will say, It&lt;/p&gt;</description><link>http://blog.nmrony.docker/installing-latest-docker-on-ubuntu/</link><guid isPermaLink="false">b541fa14-e218-4329-8b91-81869fb5366a</guid><dc:creator>Nur Rony</dc:creator><pubDate>Fri, 01 May 2015 14:15:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt; is an awesome and powerful tool for developing and deploying your apps. According to Docker official website, Docker is&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Docker is an open platform for developers and sysadmins to build, ship, and run distributed applications&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you ask me to tell you what docker is I will say, It provides a linux container based virtual environment to work in your local dev machine and versioning your virtual environment as git. Like github, docker has dockerhub where you can push your virtual environment(containers) packaged in an image. Isn’t it AWESOME..!! &amp;#x1f609;&lt;/p&gt;

&lt;p&gt;In this post I just describe how to install docker in Ubuntu. I believe we should keep up to date and only use the latest version of docker. To install docker run the following command in your terminal.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -qO- https://get.docker.com/ | sh  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thats it, docker script will do all for you. You must have root access or have to be a &lt;code&gt;sudo&lt;/code&gt; user to install docker. If you don’t want to use docker client with &lt;code&gt;sudo&lt;/code&gt; you need to run the following command for it.  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo usermod -aG docker &amp;lt;your-username&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I promise, I will return with more tutorials on Docker soon. Till then take care, sayonara!!&lt;/p&gt;</content:encoded></item><item><title>CSS: Using Element Query Posted on</title><description>&lt;p&gt;Responsive design is known to all. To achieve responsiveness we generally use media queries. But I feel media queries are some kind of CSS Hack. It is really annoying when I need to work with it. Sometime it makes my CSS totally messy that I don’t want to see&lt;/p&gt;</description><link>http://blog.nmrony.docker/css-using-element-query-posted-on/</link><guid isPermaLink="false">a458306f-e71a-4072-a820-07512430a19e</guid><category>css3</category><category>responsive design</category><dc:creator>Nur Rony</dc:creator><pubDate>Sun, 19 Apr 2015 14:10:00 GMT</pubDate><content:encoded>&lt;p&gt;Responsive design is known to all. To achieve responsiveness we generally use media queries. But I feel media queries are some kind of CSS Hack. It is really annoying when I need to work with it. Sometime it makes my CSS totally messy that I don’t want to see it again. If anyone who is in my situation I have a good news for those. It is Element Query.&lt;/p&gt;

&lt;p&gt;In Element Query we define our responsive elements in more expressive way like below&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.widget-name {
    padding: 25px;
}
.widget-name[max-width="200px"] {
    padding: 0;
}
.widget-name[min-width="500px"] {
    padding: 55px;
}

/* responsive images */
.responsive-image img {
    width: 100%;
}

.responsive-image[max-width^='400px'] img {
    content: url(demo/image-400px.jpg);
}

.responsive-image[max-width^='1000px'] img {
    content: url(demo/image-1000px.jpg);
}

.responsive-image[min-width='1000px'] img {
    content: url(demo/image-full.jpg);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There are many Element query repository in github. I used the below and found really cool &lt;br&gt;
&lt;a href="https://github.com/marcj/css-element-queries"&gt;https://github.com/marcj/css-element-queries&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title>NodeJS: Replacing text in a file</title><description>&lt;p&gt;Here is the simple chunk of code to replace a particular section in a file asynchronously.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fs.readFile(filePath, 'utf8', function(err, data) {  
    if (err) {
      return console.log(err);
    }

    var result = data.replace(your-regex-or-text,replacement-text);
    fs.writeFile(filePath, result, 'utf8', function(err) {
        if (err) {
           return console.log(err);
        };
    });
});
&lt;/code&gt;&lt;/pre&gt;</description><link>http://blog.nmrony.docker/nodejs-replacing-text-in-a-file/</link><guid isPermaLink="false">71bd91a6-87bb-4fbb-bdf5-6209dc47c140</guid><category>nodejs</category><category>code</category><category>tips</category><dc:creator>Nur Rony</dc:creator><pubDate>Sun, 12 Apr 2015 14:08:00 GMT</pubDate><content:encoded>&lt;p&gt;Here is the simple chunk of code to replace a particular section in a file asynchronously.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fs.readFile(filePath, 'utf8', function(err, data) {  
    if (err) {
      return console.log(err);
    }

    var result = data.replace(your-regex-or-text,replacement-text);
    fs.writeFile(filePath, result, 'utf8', function(err) {
        if (err) {
           return console.log(err);
        };
    });
});
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title>NodeJS: Write file if parent folder dosen’t exists</title><description>&lt;p&gt;Very simple and really awesome solution that I found on stackoverflow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In ES2015&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import mkdirp from 'mkdirp'  
import fs from 'fs'  
import { dirname } from 'path'  
function writeFile (path, contents, cb) {  
  mkdirp(dirname(path), (err) =&amp;gt; {
    if (err) return cb(err)
    fs.writeFile(path, contents, cb)
  })
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;In ES5&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var mkdirp = require(&lt;/code&gt;&lt;/pre&gt;</description><link>http://blog.nmrony.docker/nodejs-write-file-if-parent-folder-dosent-exists/</link><guid isPermaLink="false">80b3c336-993e-443f-b886-3e5fccfd6025</guid><category>nodejs</category><category>code</category><dc:creator>Nur Rony</dc:creator><pubDate>Mon, 06 Apr 2015 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Very simple and really awesome solution that I found on stackoverflow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In ES2015&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import mkdirp from 'mkdirp'  
import fs from 'fs'  
import { dirname } from 'path'  
function writeFile (path, contents, cb) {  
  mkdirp(dirname(path), (err) =&amp;gt; {
    if (err) return cb(err)
    fs.writeFile(path, contents, cb)
  })
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;In ES5&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var mkdirp = require("mkdirp")  
var fs = require("fs")  
var getDirName = require("path").dirname  
function writeFile (path, contents, cb) {  
  mkdirp(getDirName(path), function (err) {
    if (err) return cb(err)
    fs.writeFile(path, contents, cb)
  })
}
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title>ES5 Main Features</title><description>&lt;p&gt;ECMAScript5 features now supported by all browser vendors. Almost every time I forget that many handy functions are introduced in ES5 and I don’t need to write utility functions for it. So I feel to dump all features in a post so that I can find which features are&lt;/p&gt;</description><link>http://blog.nmrony.docker/es5-main-features/</link><guid isPermaLink="false">cba55694-5224-464a-a62b-a35c15dadf53</guid><category>javascript</category><category>es5</category><category>code</category><dc:creator>Nur Rony</dc:creator><pubDate>Sun, 05 Apr 2015 13:46:00 GMT</pubDate><content:encoded>&lt;p&gt;ECMAScript5 features now supported by all browser vendors. Almost every time I forget that many handy functions are introduced in ES5 and I don’t need to write utility functions for it. So I feel to dump all features in a post so that I can find which features are natively provided by ES5.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Object &lt;br&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create"&gt;Object.create&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty"&gt;Object.defineProperty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties"&gt;Object.defineProperties&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf"&gt;Object.getPrototypeOf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys"&gt;Object.keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze"&gt;Object.freeze&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/seal"&gt;Object.seal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions"&gt;Object.preventExtensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed"&gt;Object.isSealed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen"&gt;Object.isFrozen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible"&gt;Object.isExtensible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor"&gt;Object.getOwnPropertyDescriptor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames"&gt;Object.getOwnPropertyNames&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Date &lt;br&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString"&gt;Date.prototype.toISOString&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now"&gt;Date.now&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Array &lt;br&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray"&gt;Array.isArray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf"&gt;Array.prototype.indexOf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf"&gt;Array.prototype.lastIndexOf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every"&gt;Array.prototype.every&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some"&gt;Array.prototype.some&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach"&gt;Array.prototype.forEach&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter"&gt;Array.prototype.filter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"&gt;Array.prototype.map&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce"&gt;Array.prototype.reduce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight"&gt;Array.prototype.reduceRight&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;JSON &lt;br&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse"&gt;JSON.parse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify"&gt;JSON.stringify&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Function &lt;br&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind"&gt;Function.prototype.bind&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;String &lt;br&gt;
&lt;ol&gt;&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim"&gt;String.prototype.trim&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode"&gt;strict mode&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title>Easiest Way to make a div horizontally and vertically centered</title><description>&lt;p&gt;Sometimes for us silly problem make us wet with sweat. Centering div from both horizontally and vertically may be one of them. I found a sweet and easy way to make a div centered. I think, it is the most easiest way. Here it is ..  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;  
&amp;lt;&lt;/code&gt;&lt;/pre&gt;</description><link>http://blog.nmrony.docker/easiest-way-to-make-a-div-horizontally-and-vertically-centered/</link><guid isPermaLink="false">66d80ef5-25fd-4640-ab56-1c1273ddaa36</guid><category>howto</category><category>css3</category><dc:creator>Nur Rony</dc:creator><pubDate>Sat, 04 Apr 2015 16:38:00 GMT</pubDate><content:encoded>&lt;p&gt;Sometimes for us silly problem make us wet with sweat. Centering div from both horizontally and vertically may be one of them. I found a sweet and easy way to make a div centered. I think, it is the most easiest way. Here it is ..  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;  
&amp;lt;html&amp;gt;  
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset="utf-8"&amp;gt;
    &amp;lt;title&amp;gt;Centering DIV&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The CSS part us really cool  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;div {  
  background: green;
  bottom: 0;
  height: 100px;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  width: 100px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I will explain later why this works. But need to take a nap for now. &lt;/p&gt;</content:encoded></item><item><title>pbcopy / pbpaste in Ubuntu (command line clipboard)</title><description>&lt;p&gt;OS X has a neat command-line tool called pbcopy which takes the standard input and places it in the clipboard to paste into other applications.&lt;/p&gt;

&lt;p&gt;In Ubuntu(or any Linux distro with Xwindows), a similar tool is xclip. I like to make this alias:  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias pbcopy='xclip -selection clipboard'  
alias&lt;/code&gt;&lt;/pre&gt;</description><link>http://blog.nmrony.docker/pbcopy-pbpaste-in-ubuntu-command-line-clipboard/</link><guid isPermaLink="false">40549ffd-35f0-4f0d-b695-55e078a47f64</guid><category>tips</category><category>linux</category><dc:creator>Nur Rony</dc:creator><pubDate>Thu, 02 Apr 2015 07:12:00 GMT</pubDate><content:encoded>&lt;p&gt;OS X has a neat command-line tool called pbcopy which takes the standard input and places it in the clipboard to paste into other applications.&lt;/p&gt;

&lt;p&gt;In Ubuntu(or any Linux distro with Xwindows), a similar tool is xclip. I like to make this alias:  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias pbcopy='xclip -selection clipboard'  
alias pbpaste='xclip -selection clipboard -o'  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you do not have &lt;strong&gt;xclip&lt;/strong&gt; pre installed you can install it running following command in terminal before making the alias  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# For Ubuntu or Debian users
sudo apt-get install xclip -y  
# For Fedora/CentOS users
sudo yum install xclip -y  
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title>JSONP with ExpressJS</title><description>&lt;p&gt;This post explains how developers can circumvent the Same Origin Policy implemented by all modern web-browsers by requesting data in the JSONP format. Generally modern browsers do not allow POST, PUT or PATCH request if the request is not done by same origin. By using JSONP we can easily overcome&lt;/p&gt;</description><link>http://blog.nmrony.docker/jsonp-with-expressjs/</link><guid isPermaLink="false">8830f560-ab31-4712-879a-5caa0cbe51bf</guid><category>express</category><category>json</category><category>nodejs</category><category>javascript</category><dc:creator>Nur Rony</dc:creator><pubDate>Wed, 25 Mar 2015 18:19:00 GMT</pubDate><content:encoded>&lt;p&gt;This post explains how developers can circumvent the Same Origin Policy implemented by all modern web-browsers by requesting data in the JSONP format. Generally modern browsers do not allow POST, PUT or PATCH request if the request is not done by same origin. By using JSONP we can easily overcome this. But lets learn some basics.&lt;/p&gt;

&lt;h4 id="whatissameoriginpolicy"&gt;What is Same Origin Policy?&lt;/h4&gt;

&lt;p&gt;The Same Origin Policy is a security measure imposed by all modern browsers that restricts the ability of JavaScript to make AJAX requests across domains. As a security measure this is desirable because it makes it more difficult for malicious scripts to communicate with domains you don’t trust. However, it also makes it harder for developers to write client side apps that use JavaScript to communicate with REST API. For a more detailed explanation of the Same Origin Policy see &lt;br&gt;
&lt;a href="http://en.wikipedia.org/wiki/Same-origin_policy"&gt;http://en.wikipedia.org/wiki/Same-origin_policy&lt;/a&gt;&lt;/p&gt;

&lt;h4 id="jsonp"&gt;JSONP&lt;/h4&gt;

&lt;p&gt;JSONP, or JavaScript Object Notation with Padding, is a technique for returning data in a way that works around the restrictions imposed by the Same Origin Policy. It relies on the fact that tags are not subject to the Same Origin Policy. When data is requested using JSONP it is returned as a text representation of a JSON object wrapped or “padded” with a JavaScript function name. &lt;br&gt;
When a tag processes a JSONP response, the JSON object is treated as an argument and if the function is already defined on the page it is executed immediately, giving that function access to the JSON object.&lt;/p&gt;

&lt;p&gt;Lots of chit chat lets make hands dirty&lt;/p&gt;

&lt;h4 id="jsonpinjs"&gt;JSONP in JS&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;//jsonp.js
var JSONP = (function(){  
  var that = {};

  that.send = function(src, options) {
    var callback_name = options.callbackName || 'callback',
      on_success = options.onSuccess || function(){},
      on_timeout = options.onTimeout || function(){},
      timeout = options.timeout || 10;

    var timeout_trigger = window.setTimeout(function(){
      window[callback_name] = function(){};
      on_timeout();
    }, timeout * 1000);

    window[callback_name] = function(data){
      window.clearTimeout(timeout_trigger);
      on_success(data);
    };

    var script = document.createElement('script');
    script.type = 'text/javascript';
    script.async = true;
    script.src = src;

    document.getElementsByTagName('head')[0].appendChild(script);
  };

  return that;
})();

//In your HTML script tag or in JS file 
JSONP.send('/your/endpoint?callback=name', { callbackName: 'name' });  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and In your Express App just call  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//route.js
route.post('/your/endpoint',function(req, res){  
    res.jsonp('your response object')
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You may need &lt;a href="https://www.npmjs.com/package/cors"&gt;&lt;strong&gt;CORS&lt;/strong&gt;&lt;/a&gt; module&lt;/p&gt;

&lt;p&gt;Not joking!!! really so simple in ExpressJS&lt;/p&gt;</content:encoded></item><item><title>Working Init script for Logstash Forwarder for CentOS 5/6</title><description>&lt;p&gt;Some days ago I am working one of a project where we need to install &lt;code&gt;logstash-forwarder&lt;/code&gt; to collect logs from distributed servers. I found that the init script from here is not working well and after googling I found this script working well with CentOS 6&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
# chkconfig: 345&lt;/code&gt;&lt;/pre&gt;</description><link>http://blog.nmrony.docker/working-init-script-for-logstash-forwarder-for-centos-5-6/</link><guid isPermaLink="false">c64b136c-e585-40d0-8bc7-0bbe0d6325d5</guid><category>centos</category><category>logstash</category><dc:creator>Nur Rony</dc:creator><pubDate>Sun, 22 Mar 2015 07:03:00 GMT</pubDate><content:encoded>&lt;p&gt;Some days ago I am working one of a project where we need to install &lt;code&gt;logstash-forwarder&lt;/code&gt; to collect logs from distributed servers. I found that the init script from here is not working well and after googling I found this script working well with CentOS 6&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
# chkconfig: 345 80 20
# description: Logstash Forwarder
# processname: logstash-forwarder
# config: /etc/logstash-forwarder
# pidfile: /var/run/logstash-forwarder.pid

### BEGIN INIT INFO
# Provides: logstash-forwarder
# Required-Start: $local_fs $network $remote_fs
# Required-Stop: $local_fs $network $remote_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop logstash-forwarder
# Description: Logstash Forwarder
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

PATH=/sbin:/usr/sbin:/bin:/usr/bin

prog=logstash-forwarder  
DAEMON=/opt/logstash-forwarder/bin/logstash-forwarder  
pidfile=/var/run/$prog.pid  
lockfile=/var/lock/subsys/$prog

# load defaults

[ -e /etc/default/$prog ] &amp;amp;amp;&amp;amp;amp; . /etc/default/$prog
[ -e /etc/sysconfig/$prog ] &amp;amp;amp;&amp;amp;amp; . /etc/sysconfig/$prog

DAEMON_ARGS=&amp;amp;quot;${DAEMON_ARGS:--config /etc/logstash-forwarder -spool-size 100 -log-to-syslog}&amp;amp;quot;

start()  
{
    echo -n $&amp;amp;quot;Starting $prog: &amp;amp;quot;
    nohup $DAEMON $DAEMON_ARGS &amp;amp;lt;/dev/null &amp;amp;gt;/dev/null 2&amp;amp;gt;&amp;amp;amp;1 &amp;amp;amp;
    retval=$?
    pid=$!
    echo $pid &amp;amp;gt; $pidfile
    if [ rh_status_q ]; then
        touch $lockfile
        success
        echo
    fi
    return $retval
}

stop()  
{
    echo -n $&amp;amp;quot;Stopping $prog: &amp;amp;quot;
    killproc -p &amp;amp;quot;$pidfile&amp;amp;quot; $prog
    retval=$?
    [ -f &amp;amp;quot;$pidfile&amp;amp;quot; ] &amp;amp;amp;&amp;amp;amp; rm -f $pidfile
    echo
    [ $retval -eq 0 ] &amp;amp;amp;&amp;amp;amp; rm -f $lockfile
    return $retval
}

restart() {  
    stop
    start
}

reload() {  
    restart
}

force_reload() {  
    restart
}

rh_status() {  
    status -p $pidfile $prog
}

rh_status_q() {  
    rh_status &amp;amp;gt;/dev/null 2&amp;amp;gt;&amp;amp;amp;1
}

case &amp;amp;quot;$1&amp;amp;quot; in  
    start)
        rh_status_q &amp;amp;amp;&amp;amp;amp; exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    status)
        rh_status
        ;;
    *)
        echo &amp;amp;quot;Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}&amp;amp;quot;
        exit 2
esac  
exit $?  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your instance also needed either of the following files  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/etc/defaults/logstash-forwarder
/etc/sysconfig/logstash-forwarder
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The content of the file is  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DAEMON_ARGS='${DAEMON_ARGS:--config /etc/logstash-forwarder/logstash-forwarder.conf -spool-size 100}'  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;you found the gist &lt;a href="https://gist.github.com/nmrony/c487b4b7c0235a11a112"&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title>Install latest PHP 5.6 using Ubuntu PPA</title><description>&lt;p&gt;It is very easy installing latest PHP 5.6 using PPA&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:ondrej/php5-5.6 -y  
sudo apt-get update  
sudo sudo apt-get install make php5\  
php5-mongo \  
php-pear \  
php5-dev \  
php5-mysql \  
php5-common \  
php5-cli \  
php5-curl \  
php5-fpm \  
php5-mcrypt \  
php5-xmlrpc \  
php5-gd \  
php5-json \  
php5-readline \  
mcrypt \  
curl \  
dh-make \  
libmcrypt-dev \  
mysql-server-5.6 \  
mysql-client-5.6 \  
php5-sqlite \  
php5-oauth&lt;/code&gt;&lt;/pre&gt;</description><link>http://blog.nmrony.docker/install-latest-php-5-6-using-ubuntu-ppa/</link><guid isPermaLink="false">9e1b6d8e-4ed0-4fc1-a935-f2787e4bcb05</guid><category>ubuntu-14-04</category><category>php</category><category>howto</category><dc:creator>Nur Rony</dc:creator><pubDate>Sat, 21 Mar 2015 06:58:00 GMT</pubDate><content:encoded>&lt;p&gt;It is very easy installing latest PHP 5.6 using PPA&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:ondrej/php5-5.6 -y  
sudo apt-get update  
sudo sudo apt-get install make php5\  
php5-mongo \  
php-pear \  
php5-dev \  
php5-mysql \  
php5-common \  
php5-cli \  
php5-curl \  
php5-fpm \  
php5-mcrypt \  
php5-xmlrpc \  
php5-gd \  
php5-json \  
php5-readline \  
mcrypt \  
curl \  
dh-make \  
libmcrypt-dev \  
mysql-server-5.6 \  
mysql-client-5.6 \  
php5-sqlite \  
php5-oauth  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can remove or add extensions that is not needed by you. You may need to install &lt;code&gt;software-properties-common&lt;/code&gt; previously &lt;code&gt;python-software-properties&lt;/code&gt;&lt;/p&gt;</content:encoded></item><item><title>Vagrant: Deploy and provisioning an Amazon EC2 instance</title><description>&lt;p&gt;Vagrant is a really powerful tool for managing virtual machines. If you’re a developer it can make it push-button simple to setup a dev box on your laptop. It manages the VMs, and uses configuration files to describe specifics of your machines. We can use &lt;strong&gt;VirtualBox&lt;/strong&gt;, &lt;strong&gt;VMWare&lt;/strong&gt;, &lt;strong&gt;AWS&lt;/strong&gt;, &lt;strong&gt;DigitalOcean&lt;/strong&gt;&lt;/p&gt;</description><link>http://blog.nmrony.docker/vagrant-deploy-and-provisioning-an-amazon-ec2-instance/</link><guid isPermaLink="false">015b5866-6160-4b8b-bac2-8fc176c33d03</guid><category>vagrant</category><category>devops</category><category>howto</category><category>aws</category><category>EC2</category><category>amazon web service</category><dc:creator>Nur Rony</dc:creator><pubDate>Thu, 19 Mar 2015 13:21:00 GMT</pubDate><content:encoded>&lt;p&gt;Vagrant is a really powerful tool for managing virtual machines. If you’re a developer it can make it push-button simple to setup a dev box on your laptop. It manages the VMs, and uses configuration files to describe specifics of your machines. We can use &lt;strong&gt;VirtualBox&lt;/strong&gt;, &lt;strong&gt;VMWare&lt;/strong&gt;, &lt;strong&gt;AWS&lt;/strong&gt;, &lt;strong&gt;DigitalOcean&lt;/strong&gt; as provider to launch our servers and automatically provision it.&lt;/p&gt;

&lt;h4 id="prerequisites"&gt;Prerequisites&lt;/h4&gt;

&lt;p&gt;I am assuming you have the latest version of Vagrant installed in your dev machine and familiar with &lt;code&gt;Vagrantfile&lt;/code&gt; and its commands. If you don’t know about &lt;code&gt;Vagrant&lt;/code&gt;, you can visit the &lt;a href="https://docs.vagrantup.com/v2/"&gt;official docummentation&lt;/a&gt; of Vagrant and learn about it.&lt;/p&gt;

&lt;p&gt;You need to have a AWS account and the following&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS access key&lt;/li&gt;
&lt;li&gt;AWS secret key&lt;/li&gt;
&lt;li&gt;SSH keypair name&lt;/li&gt;
&lt;li&gt;SSH private key file (.pem extension)&lt;/li&gt;
&lt;li&gt;Make sure the your security group enables SSH (port 22) access from anywhere&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;The EC2 instance used to deploy here may not fit in your AWS Free Tier Plan and cost your money.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id="settingenvironmentvariable"&gt;Setting Environment Variable&lt;/h4&gt;

&lt;p&gt;I like to set these up as environment variables to keep them out of the &lt;code&gt;Vagrantfile&lt;/code&gt;. On Mac or Linux systems you can add this to your &lt;code&gt;$HOME/.profile&lt;/code&gt; or &lt;code&gt;$HOME/.bashrc&lt;/code&gt; file:  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export AWS_KEY='your-access-key'  
export AWS_SECRET='your-secret-secret'  
export AWS_KEYNAME='your-keyname'  
export AWS_KEYPATH='your-keypath'  
export AWS_DEFAULT_REGION='your-region'  
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="installthevagrantawsplugin"&gt;Install the &lt;code&gt;vagrant-aws&lt;/code&gt; plugin&lt;/h4&gt;

&lt;p&gt;To install &lt;code&gt;vagrant-aws&lt;/code&gt; plugin run the following command in terminal  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vagrant plugin install vagrant-aws  
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="fetchawsdummybox"&gt;Fetch AWS Dummy Box&lt;/h4&gt;

&lt;p&gt;To fetch the Vagrant AWS dummy box run the following command in terminal  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vagrant box add dummybox-aws https://github.com/mitchellh/vagrant-aw  
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="creatingvagrantfile"&gt;Creating Vagrantfile&lt;/h4&gt;

&lt;p&gt;Run the following commands in terminal to create a &lt;code&gt;Vagrantfile&lt;/code&gt;  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /path/to/your/dir &amp;amp;&amp;amp; cd $_  
vagrant init dummybox-aws  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will create a &lt;code&gt;Vagrantfile&lt;/code&gt; in current directory using &lt;code&gt;dummybox-aws&lt;/code&gt; that we added in previous step.&lt;/p&gt;

&lt;h4 id="configurevagrantfile"&gt;Configure Vagrantfile&lt;/h4&gt;

&lt;p&gt;Now our &lt;code&gt;Vagrantfile&lt;/code&gt; with the specifics needed for AWS. Refer to the &lt;code&gt;vagrant-aws&lt;/code&gt; documentation to understand all the options.  &lt;/p&gt;

&lt;pre&gt;&lt;code class="language-ruby"&gt;# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrant on AWS Example
# Nur Mohammed Rony

# Adjustable settings
# timezone, like US/Pacific, US/Eastern, UTC, Europe/Warsaw, etc.
CFG_TZ = "US/Pacific"

# Provisioning script
provision_script = &amp;lt;&amp;lt;SCRIPT  
#!/bin/bash

# set timezone
echo "#{CFG_TZ}" &amp;gt; /etc/timezone  
dpkg-reconfigure -f noninteractive tzdata

# install a few base packages
apt-get update  
apt-get install vim curl git build-essential -y  
#long provisioning command
echo Provisioning is complete  
SCRIPT

Vagrant.configure(2) do |config|

  config.vm.box = "dummybox-aws"
  config.vm.synced_folder ".", "/home/ubuntu/devpc", type: "rsync", rsync__exclude: ".git/"
  config.vm.hostname = "stagingbox"
  config.vm.provision :shell, :inline =&amp;gt; provision_script
  config.vm.provider :aws do |aws, override|

    #AWS Settings
    aws.access_key_id = ENV['AWS_KEY']
    aws.secret_access_key = ENV['AWS_KEYNAME']
    aws.region = ENV['AWS_DEFAULT_REGION']

    aws.tags = {
      'Name' =&amp;gt; 'NurRony StagingBox',
      'Team' =&amp;gt; 'devops',
      'Status' =&amp;gt; 'active'
    }

    #Override Settings
    override.ssh.username = "ubuntu"
    override.ssh.private_key_path = ENV['AWS_KEYPATH']

    aws.region_config "us-west-2" do |region|
      region.ami = 'ami-35143705'
      region.instance_type = 'c4.large'
      region.keypair_name = ENV['AWS_KEYNAME']
      region.security_groups = "devops"
    end
  end
end  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add or edit more options according to your need.&lt;/p&gt;

&lt;h4 id="startupvagrantbox"&gt;Startup Vagrant box&lt;/h4&gt;

&lt;p&gt;Run the following command to start vagrant box which will create and run an AWS EC2 instance with your provided settings in previous step  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vagrant up —-provider=aws  
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="verifyintheamazondashboard"&gt;Verify in the Amazon dashboard&lt;/h4&gt;

&lt;p&gt;Jump over to your amazon dashboard with &lt;a href="https://console.aws.amazon.com/ec2/v2/home?region=us-west-2#Instances:"&gt;this link&lt;/a&gt;. If you’re logged in already, that will take you to your EC2 instances. You should see a new one, based on the parameters in your &lt;code&gt;Vagrantfile&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id="workingwithnewlycreatedec2instance"&gt;Working with newly created EC2 instance&lt;/h4&gt;

&lt;p&gt;You can connect via SSH, stop, reload or re-provision your newly created EC2 instance with regular Vagrant command like below  &lt;/p&gt;

&lt;pre&gt;&lt;code class="language-bash"&gt;#To SSH to instance
vagrant ssh  
#To restart the instance or re-provision
vagrant reload reload [--provision]  
#To stop 
vagrant halt  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You need to configure a specific AMI for Vagrant to use. I find the Ubuntu &lt;a href="http://cloud-images.ubuntu.com/locator/ec2/"&gt;Amazon EC2 AMI Finder&lt;/a&gt; very helpful to match the version and region I wanted to use.&lt;/li&gt;
&lt;li&gt;A common tripping point is the default security group not allowing SSH (port 22) from any IP address. Also make sure to add any other ports depending on your application (e.g., port 80 for HTTP).&lt;/li&gt;
&lt;li&gt;Once you have the basics working, make sure to read through the &lt;a href="https://github.com/mitchellh/vagrant-aws"&gt;vagrant-aws&lt;/a&gt; project to understand all the options available.&lt;/li&gt;
&lt;li&gt;Make sure to &lt;code&gt;vagrant destroy&lt;/code&gt; your VMs when done, and check the AWS Console to make sure they were terminated correctly (to avoid unexpected charges).
Good Luck!!! If you face any problem feel free to poke me.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title>Setup a private RTMP server with nginx-rtmp-module</title><description>&lt;p&gt;&lt;strong&gt;Real Time Messaging Protocol (RTMP)&lt;/strong&gt; is one of the most popular way for streaming video, audio or data between a Flash player and a server. You can easily have a private RTMP server using Nginx and a module of it called &lt;a href="https://github.com/arut/nginx-rtmp-module"&gt;&lt;strong&gt;nginx-rtmp-module&lt;/strong&gt;&lt;/a&gt;. This post will help you to setup a&lt;/p&gt;</description><link>http://blog.nmrony.docker/setup-a-private-rtmp-server-with-nginx-rtmp-module/</link><guid isPermaLink="false">5f74e5e8-2443-42a9-aa98-d2782c6e8c3a</guid><category>nginx</category><category>rtmp</category><category>live streaming</category><dc:creator>Nur Rony</dc:creator><pubDate>Tue, 17 Mar 2015 13:11:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;strong&gt;Real Time Messaging Protocol (RTMP)&lt;/strong&gt; is one of the most popular way for streaming video, audio or data between a Flash player and a server. You can easily have a private RTMP server using Nginx and a module of it called &lt;a href="https://github.com/arut/nginx-rtmp-module"&gt;&lt;strong&gt;nginx-rtmp-module&lt;/strong&gt;&lt;/a&gt;. This post will help you to setup a RTMP server following some simple steps. So no more chit-chat lets jump into it.&lt;/p&gt;

&lt;h4 id="prerequisites"&gt;Prerequisites&lt;/h4&gt;

&lt;p&gt;You must have &lt;strong&gt;root&lt;/strong&gt; privilege to complete this steps. I am on Ubuntu and using apt-get as my package manager but for other distribution of Linux I strongly hope that all command will be valid just replacing with the package manager and appropriate package name.&lt;/p&gt;

&lt;h4 id="installingdependencies"&gt;Installing dependencies&lt;/h4&gt;

&lt;p&gt;Run the following commands to compile &lt;code&gt;Nginx&lt;/code&gt; with &lt;code&gt;nginx-rtmp-module&lt;/code&gt;  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update;  
sudo apt-get install -y build-essential git libpcre3 \  
libpcre3-dev openssl libssl-dev zlibc zlib1g zlib1g-dev  
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id="compilingnginxwithrtmpmodule"&gt;Compiling Nginx with RTMP Module&lt;/h4&gt;

&lt;p&gt;Now we compile Nginx with RTMP module. I use following configure command to compile Nginx. You can add or remove options according to your need  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd $HOME &amp;amp;&amp;amp; cd nginx-*  
./configure --prefix=/etc/nginx \
--sbin-path=/usr/sbin/nginx \
--conf-path=/etc/nginx/nginx.conf \
--pid-path=/var/run/nginx.pid \
--lock-path=/var/run/nginx.lock \
--with-http_ssl_module \
--with-http_realip_module \
--with-http_addition_module \
--with-http_sub_module \
--with-http_dav_module \
--with-http_flv_module \
--with-http_mp4_module \
--with-http_gunzip_module \
--with-http_gzip_static_module \
--with-http_random_index_module \
--with-http_secure_link_module \
--with-http_stub_status_module \
--with-file-aio \
--with-pcre \
--with-file-aio \
--with-http_spdy_module \
--with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -DTCP_FASTOPEN=23' \
--with-ld-opt='-Wl,-z,relro -Wl,--as-needed -L /usr/lib' \
--with-ipv6 \
--with-debug \
--without-http_scgi_module \
--without-http_uwsgi_module \
--add-module=$HOME/nginx-rtmp-module
make  
sudo make install  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;
Now you have Nginx installed in your dev machine or server which running &lt;code&gt;Ubuntu 14.04&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id="configurertmpapplication"&gt;Configure RTMP Application&lt;/h4&gt;

&lt;p&gt;Configuring simple live RTMP application is so simple. To configure a RTMP live streaming application you need to edit nginx configuration file  &lt;/p&gt;

&lt;pre&gt;&lt;code class="language-bash"&gt;sudo nano /etc/nginx/nginx.conf  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
and under HTTP block paste the following piece of RTMP block to make a RTMP live streaming application called live.  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rtmp {  
    server {
        listen 1935;
        application live {
            live on;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Restart nginx server by running the following command  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo /usr/sbin/nginx -s stop &amp;amp;&amp;amp; sudo /usr/sbin/nginx  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;
That all!! Now you have a private live streaming RTMP server running with Nginx. You can push your live video or audio stream to &lt;code&gt;rtmp://your-ip-or-domainName:1935/live/{your-stream-name}&lt;/code&gt; using &lt;code&gt;FFMpeg&lt;/code&gt; or &lt;code&gt;GStreamer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There are lots of directive to fine tune the &lt;code&gt;RTMP&lt;/code&gt; application. You can find it from the Directive page of &lt;code&gt;nginx-rtmp-module&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you face any problem please leave a comment... I will respond for sure.&lt;/p&gt;</content:encoded></item></channel></rss>